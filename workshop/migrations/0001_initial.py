# Generated by Django 2.2.9 on 2020-01-18 05:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
                ('municipality', models.CharField(max_length=20)),
                ('comment', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('entry_conditions', models.TextField(blank=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Client')),
            ],
            options={
                'verbose_name': 'Entry',
                'verbose_name_plural': 'Entries',
            },
        ),
        migrations.CreateModel(
            name='Fix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price', models.FloatField()),
            ],
            options={
                'verbose_name': 'Fix',
                'verbose_name_plural': 'Fixes',
            },
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Hardware',
                'verbose_name_plural': 'Hardwares',
            },
        ),
        migrations.CreateModel(
            name='OtherPiece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('price', models.FloatField()),
            ],
            options={
                'verbose_name': 'OtherPiece',
                'verbose_name_plural': 'OthersPieces',
            },
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=50)),
                ('price', models.FloatField()),
                ('count', models.IntegerField(default=0)),
                ('min_count', models.IntegerField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'Piece',
                'verbose_name_plural': 'Pieces',
            },
        ),
        migrations.CreateModel(
            name='RoadEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('phone_number', models.CharField(max_length=20)),
                ('customer_observation', models.TextField(blank=True)),
                ('appointment_datetime', models.DateTimeField(blank=True, null=True)),
                ('fixed_appointment_datetime', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Client')),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Hardware')),
            ],
            options={
                'verbose_name': 'RoadEntry',
                'verbose_name_plural': 'RoadEntries',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='SubRoadService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('REQ', 'REQUESTED'), ('CONF', 'CONFIRMED'), ('UPEN', 'UNASSIGNED_PENDING'), ('APEN', 'ASSIGNED_PENDING'), ('END_UNF', 'ENDED_UNFINISHED'), ('FIN', 'FINISHED'), ('WARR', 'WARRANTY'), ('NO_WARR', 'NO_WARRANTY')], default='REQ', max_length=10)),
                ('staff_annotations', models.TextField(blank=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('fix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Fix')),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Hardware')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.User')),
            ],
            options={
                'verbose_name': 'SubRoadService',
                'verbose_name_plural': 'SubRoadServices',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('UPEN', 'UNASSIGNED_PENDING'), ('APEN', 'ASSIGNED_PENDING'), ('PROC', 'PROCESS'), ('FIN', 'FINISHED'), ('WARR', 'WARRANTY'), ('NO_WARR', 'NO_WARRANTY')], default='UPEN', max_length=10)),
                ('staff_annotations', models.TextField(blank=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Entry')),
                ('fix', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.Fix')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.User')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='RoadService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('REQ', 'REQUESTED'), ('CONF', 'CONFIRMED'), ('UPEN', 'UNASSIGNED_PENDING'), ('APEN', 'ASSIGNED_PENDING'), ('END_UNF', 'ENDED_UNFINISHED'), ('FIN', 'FINISHED'), ('WARR', 'WARRANTY'), ('NO_WARR', 'NO_WARRANTY')], default='REQ', max_length=10)),
                ('staff_annotations', models.TextField(blank=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.RoadEntry')),
                ('fix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Fix')),
                ('others_services', models.ManyToManyField(blank=True, to='workshop.SubRoadService')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.User')),
            ],
            options={
                'verbose_name': 'RoadService',
                'verbose_name_plural': 'RoadServices',
            },
        ),
        migrations.AddField(
            model_name='roadentry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.User'),
        ),
        migrations.AddField(
            model_name='fix',
            name='other_pices',
            field=models.ManyToManyField(blank=True, to='workshop.OtherPiece'),
        ),
        migrations.AddField(
            model_name='fix',
            name='pices',
            field=models.ManyToManyField(blank=True, to='workshop.Piece'),
        ),
        migrations.AddField(
            model_name='entry',
            name='hardware',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Hardware'),
        ),
        migrations.AddField(
            model_name='entry',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.User'),
        ),
        migrations.AddField(
            model_name='client',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop.Source'),
        ),
    ]
